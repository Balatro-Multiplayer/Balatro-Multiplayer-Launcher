name: Build/release Electron app
permissions:
  contents: write

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug build'
        required: false
        default: false
        type: boolean
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: bun run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        env:
          APPLICATION_CERTIFICATE: ${{ secrets.APPLE_APPLICATION_CERTIFICATE }}
          APPLICATION_PASSWORD: ${{ secrets.APPLE_APPLICATION_CERTIFICATE_PASSWORD }}
          INSTALLER_CERTIFICATE: ${{ secrets.APPLE_INSTALLER_CERTIFICATE }}
          INSTALLER_PASSWORD: ${{ secrets.APPLE_INSTALLER_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ github.run_id }}
        run: |
          echo $APPLICATION_CERTIFICATE | base64 --decode > application.p12
          echo $INSTALLER_CERTIFICATE | base64 --decode > installer.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security import application.p12 -k build.keychain -P "$APPLICATION_PASSWORD" -T /usr/bin/codesign
          security import installer.p12 -k build.keychain -P "$INSTALLER_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          rm application.p12 installer.p12

      - name: Build
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: bun run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: bun run build:win

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
