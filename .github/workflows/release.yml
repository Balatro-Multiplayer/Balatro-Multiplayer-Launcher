name: release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug build'
        required: false
        default: false
        type: boolean
jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            build_command: bun run build:win
            artifact_glob: "dist/*.{exe,yml}"
          - os: macos-latest
            build_command: bun run build:mac
            artifact_glob: "dist/*.{dmg,yml}"
          - os: ubuntu-latest
            build_command: bun run build:linux
            artifact_glob: "dist/*.{AppImage,yml}"

    steps:
      - uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v2
      - name: Install Dependencies
        run: bun install

      # mac-specific setup if needed
#      - name: Setup Mac Certificates
#        if: matrix.os == 'macos-latest'
#        env:
#          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
#          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
#          KEYCHAIN_PASSWORD: ${{ github.run_id }}
#        run: |
#          echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
#          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
#          security default-keychain -s build.keychain
#          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
#          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
#          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
#          rm certificate.p12

      # linux-specific setup if needed
      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      # build for current platform
      - name: Build
        run: ${{ matrix.build_command }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # upload to minio
      - name: Upload to Minio
        run: bun run upload-to-minio.ts
        env:
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
